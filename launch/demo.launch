<?xml version="1.0"?>
<launch>

  <param name="use_sim_time" value="false"/>
  <arg name="rviz" default="true" />
  <arg name="cam" default="cam2"/>
  <arg name="markerId" default="7"/>
  <arg name="meter_per_pixel" value="0.003"/>
  <arg name="pixel_mode" value="False"/>

  <!--<group if="$(arg rviz)">-->
    <!--<include file="$(find rviz_textured_quads)/launch/map_visualization.xml"/>-->
    <!--<node name="rviz" pkg="rviz" type="rviz" args="-d $(find rviz_textured_quads)/demo.rviz" respawn="true" />-->
  <!--</group>-->

<!--   <node name="rqt_topic" pkg="rqt_topic" type="rqt_topic"/> -->
<!--   <node name="rviz" pkg="rviz" type="rviz" args="-d $(find potential_field_navigation)/config/config$(arg markerId).rviz" output="screen" respawn="true"/> -->


  <!--Image-->
  <node name="image_selecter_node" pkg="potential_field_navigation" type="image_selecter_node" output="screen" cwd="ROS_HOME">
    <param name="image_publisher_topic" value="/image"/>
  </node>

  <node name="image_to_vectorfield_node" pkg="potential_field_navigation" type="image_to_vectorfield_node" output="screen" cwd="ROS_HOME">
    <param name="image_listener_topic" value="/image"/>
    <param name="potentialfield_publisher_topic" value="/potentialfield/image"/>
    <param name="vectorfield_publisher_topic" value="/vectorfield/image"/>
    <param name="heuristic_abs_min" value="0.05"/> <?Undefined An arbitrary value which indecates the start of value decay?>
    <param name="heuristic_factor" value="1.0"/> <?Maximum vector lengh?>
    <param name="heuristic_apply" value="1"/> <?Use heuristic instead of native vectorfield?>
    <param name="speed_scale" value="0.01"/>

  </node>
  <node name="vectorfield_to_gridmap_node" pkg="potential_field_navigation" type="vectorfield_to_gridmap_node" output="screen" cwd="ROS_HOME">
    <param name="meter_per_pixel" value="$(arg meter_per_pixel)"/>
    <param name="frame_id" value="world"/>
    <param name="vectorfield_listener_topic" value="/vectorfield/image"/>
    <param name="gridmap_publisher_topic" value="/vectorfield/image/gridmap"/>
  </node>

  <!--Transform-->
<!--  <node if="$(arg pixel_mode)" name="tf_world_cam" pkg="tf" type="static_transform_publisher" args="-1.5 1.5 0 0 0 3.14159 world cam 100"/> -->
<!--  <node pkg="tf" type="static_transform_publisher" name="vicon_to_citrack_floor" args=".25 .04 .4 1 0 0 0 /vicon citrack/floor 100" /> -->
<!--  <node pkg="tf" type="static_transform_publisher" name="os_sensor_to_citrack_floor" args="0 0 0 1 0 0 0 /os_sensor citrack/floor 100" />
  <node pkg="tf" type="static_transform_publisher" name="radarR_to_citrack_floor" args="0.35 2.8 -.3 1 0 0 0 /radar citrack/floor 100" />-->


  <!--AMiRo Odometry to vectorfield-->
  <node name="odom1_to_vectorfield_node" pkg="potential_field_navigation" type="odom_to_vectorfield_node" output="screen" cwd="ROS_HOME">
    <param name="meter_per_pixel" value="$(arg meter_per_pixel)"/>
    <param name="amiro_odom_listener_topic" value="/amiro$(arg markerId)/odom"/>
    <param name="potentialfield_publisher_topic" value="/potentialfield/amiro$(arg markerId)"/>
    <param name="vectorfield_publisher_topic" value="/vectorfield/amiro$(arg markerId)"/>
    <param name="heuristic_abs_min" value="0.01"/> <?Undefined An arbitrary value which indecates the start of value decay?>
    <param name="heuristic_factor" value="1.0"/> <?Maximum vector lengh?>
    <param name="minimum_pose_difference_pixel" value="10.0"/> <?Only recalculate the map if the robot has moved that much?>
    <param name="pixel_mode" value="$(arg pixel_mode)"/> <?If this is true pixelmode is activated otherwhise normal mode (metric)?>
    <param name="target_frame" value="vectorfield"/>
  </node>

  <node name="odom$(arg markerId)_vectorfield_to_gridmap_node" pkg="potential_field_navigation" type="vectorfield_to_gridmap_node" output="screen" cwd="ROS_HOME">
    <param name="meter_per_pixel" value="$(arg meter_per_pixel)"/>
    <param name="frame_id" value="world"/>
    <param name="vectorfield_listener_topic" value="/vectorfield/amiro$(arg markerId)"/>
    <param name="gridmap_publisher_topic" value="/vectorfield/amiro$(arg markerId)/gridmap"/>
    <param name="pixel_mode" value="$(arg pixel_mode)"/> <?If this is true pixelmode is activated otherwhise normal mode (metric)?>
  </node>


  <!--AMiRo Bridges-->
  <!-- <include file="$(find potential_field_navigation)/launch/bridges.xml">
    <arg name="markerId" value="$(arg markerId)" />
    <arg name="pixel_mode" value="$(arg pixel_mode)" />
    <arg name="meter_per_pixel" value="$(arg meter_per_pixel)" />
    <arg name="cam" value="$(arg cam)"/>
  </include> -->

  <!--Steering-->
  <node name="amiro$(arg markerId)_vectorfield_to_kinematic_node" pkg="potential_field_navigation" type="vectorfield_to_kinematic_node" output="screen" cwd="ROS_HOME">
    <param name="meter_per_pixel" value="0.003"/>
    <param name="vectorfield_listener_topic" value="/vectorfield/image"/>
    <param name="amiro_odom_listener_topic" value="/amiro$(arg markerId)/odom" unless="$(arg pixel_mode)"/>
    <param name="amiro_odom_listener_topic" value="/tracking/pixel/$(arg markerId)" if="$(arg pixel_mode)" />
    <param name="twist_publisher_topic" value="/amiro$(arg markerId)/cmd_vel"/>
    <param name="vector_publisher_topic" value="/amiro$(arg markerId)/vector"/>
    <param name="velocityScale_meterPerSecond" value="0.1"/>
    <param name="angularScale_radPerSecond" value="2.0"/>
    <param name="pixel_mode" value="$(arg pixel_mode)"/>
    <param name="twist_mode" value="True"/>
    <param name="invert_yaw" value="False"/>
    <param name="target_frame" value="vectorfield"/>
  </node>

</launch>
